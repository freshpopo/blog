@import '../variables/variables';

// editor
.fresh-editor {
  .toastui-editor-defaultUI {
    border-color: $cream-600;
    color: $cream-100;
  }
  .toastui-editor-defaultUI-toolbar {
    border-bottom-color: $cream-800;
    background-color: $cream-900;
    .scroll-sync {
      &.active {
        &:before {
          color: $secondary;
        }
      }
    }
    .switch {
      background-color: $cream-800;
    }
    input {
      &:checked {
        + .switch {
          background-color: darken($secondary, 30%);
          &:before {
            background-color: $secondary;
          }
        }
      }
    }
  }
  .toastui-editor-toolbar-icons {
    border-color: $cream-800;
    transition: border $transition-time-default;
    &:hover:not(:disabled) {
      border-color: $cream-600;
    }
  }
  // 폰트 적용
  .toastui-editor-defaultUI, .toastui-editor-md-preview, .ProseMirror, .toastui-editor-contents {
    font-family: $font-family-base;
  }
  .toastui-editor-md-container, .toastui-editor-ww-container {
    background-color: $cream-1000;
  }
  .ProseMirror, .toastui-editor-contents {
    font-size: 1rem;
    p, h1, h2, h3, h4, h5, h6 {
      color: $cream-100;
    }
  }
  .toastui-editor-contents {
    pre {
      margin-top: 32px;
      margin-bottom: 32px;
      background-color: $cream-900;
      code {
        color: $cream-50;
      }
    }
  }
  h1, h2 {
    border-bottom: none;
    border-color: $cream-100;
  }
  h1 {
    font-size: 32px;
  }
  h2 {
    font-size: 28px;
    &:not(:first-child) {
      margin-top: 60px;
    }
  }
  h3 {
    font-size: 24px;
    &:not(:first-child) {
      margin-top: 60px;
    }
  }
  h4 {
    font-size: 20px;
    &:not(:first-child) {
      margin-top: 40px;
    }
  }
  h5 {
    font-size: 16px;
    &:not(:first-child) {
      margin-top: 40px;
    }
  }
  h6 {
    font-size: 14px;
  }
  // 동작 확인 후 삭제 결정 왜 아래가 비는지 모르겠네.
  .ProseMirror {
    height: 100%;
  }
  .toastui-editor-md-code-block, code, kbd, samp, pre {
    font-size: 0.875rem;
  }

  .toastui-editor-mode-switch {
    border-top-color: $cream-800;
    background-color: $cream-1000;
  }
}

// code
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  background: none;
  font-family: $font-family-code;
  font-size: 0.875rem;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;

  tab-size: 4;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: $info;
}

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  text-shadow: none;
  background: $info;
}

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none;
  }
}

/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: $cream-100;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}

.token.punctuation {
  color: $cream-500;
}

.token.namespace {
  opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: $error;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: $hologram-100;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: $hologram-200;
  /* This background color was intended by the author of this theme. */
  background: hsla(0, 0%, 100%, .1);
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: $secondary;
}

.token.function,
.token.class-name {
  color: $warning;
}

.token.regex,
.token.important,
.token.variable {
  color: $primary;
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}
